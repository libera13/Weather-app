{"version":3,"sources":["AppWeather.js","index.js"],"names":["api","apiImage","AppWeather","useState","query","setQuery","weather","setWeather","imageCountry","setImageCountry","className","main","style","links","backgroundImage","urls","regular","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","response","json","data1","console","log","sys","country","data","name","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","temp","ReactDOM","render","document","getElementById"],"mappings":"4JAEMA,EACG,mCADHA,EAEI,2CAGJC,EACI,gDADJA,EAEG,yDAmFMC,MA/Ef,WAAuB,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEYF,mBAAS,IAFrB,mBAEXG,EAFW,KAEFC,EAFE,OAGsBJ,mBAAS,IAH/B,mBAGXK,EAHW,KAGGC,EAHH,KAsClB,OACI,yBAAKC,UAAkC,oBAAhBJ,EAAQK,KAAsB,MAAQ,WACxDC,MAAoC,oBAAtBJ,EAAaK,MAAuB,CAACC,gBAAgB,OAAD,OAASN,EAAaO,KAAKC,QAA3B,MAC5D,MACP,8BACI,yBAAKN,UAAU,cACX,2BACIO,KAAK,OACLP,UAAW,aACXQ,YAAa,cACbC,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOC,QACjCA,MAAOlB,EACPmB,WA5CL,SAAAC,GACK,UAAZA,EAAIC,KACJC,MAAM,GAAD,OAAI1B,EAAJ,qBAAyBI,EAAzB,+BAAqDJ,IACrD2B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAKF,OAJAvB,EAAWuB,GACXzB,EAAS,IACT0B,QAAQC,IAAIF,GAELJ,MAAM,GAAD,OAAIzB,EAAJ,YAAqBG,EAArB,YAAkD,oBAAb0B,EAAMG,IAAqBH,EAAMG,IAAIC,QAAU,GAApF,YAA0FjC,OAEzG0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAQ,GACF1B,EAAgB0B,GAChB9B,EAAS,IACT0B,QAAQC,IAAIG,UAgCS,oBAAhB7B,EAAQK,KACb,oCACI,yBAAKD,UAAU,gBACX,yBAAKA,UAAU,YACVJ,EAAQ8B,KADb,KACqB9B,EAAQ2B,IAAIC,SAEjC,yBAAKxB,UAAU,QAlCnB,SAAC2B,GACjB,IAIIC,EAFO,CAAC,YAAa,oBAAgB,SAAU,aAAS,WAAY,cAAU,UAEnED,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EANS,CAAC,eAAW,OAAQ,SAAU,gBAAY,MAAO,WAC1D,SAAU,gBAAY,gBAAY,mBAAe,WAAY,iBAK9CL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAWP,EAAX,YAAkBE,EAAlB,YAA0BE,EAA1B,YAAmCE,GAyBVE,CAAY,IAAIC,QAGzB,yBAAKrC,UAAU,eACX,yBAAKA,UAAU,QACVsC,KAAKC,MAAM3C,EAAQK,KAAKuC,MAD7B,SAIA,yBAAKxC,UAAU,WACVJ,EAAQA,QAAQ,GAAGK,QAI9B,QChFtBwC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.18def7c3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst api = {\r\n    key: '66ca9e61edd6c52bc4d161383d122496',\r\n    base: 'https://api.openweathermap.org/data/2.5/'\r\n};\r\n\r\nconst apiImage = {\r\n    base: 'https://api.unsplash.com/photos/random?query=',\r\n    key: '&client_id=3qtAN8MHYSjmLoDEf_nrCEwG7VgNAtoq2PtE0MENJkA',\r\n};\r\n\r\n\r\nfunction AppWeather() {\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n    const [imageCountry, setImageCountry] = useState({});\r\n\r\n\r\n    const search = evt => {\r\n        if (evt.key === \"Enter\") {\r\n            fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n                .then(response => response.json())\r\n                .then(data1 => {\r\n                    setWeather(data1);\r\n                    setQuery('');\r\n                    console.log(data1);\r\n\r\n                    return fetch(`${apiImage.base}{${query},${typeof data1.sys != \"undefined\" ? data1.sys.country : \"\"}}${apiImage.key}`)\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setImageCountry(data);\r\n                    setQuery('');\r\n                    console.log(data)\r\n                });\r\n        }\r\n    };\r\n    const dateBuilder = (d) => {\r\n        let months = ['styczeń', 'luty', 'marzec', 'kwiecień', 'maj', 'czerwiec',\r\n            'lipiec', 'sierpień', 'wrzesień', 'październik', 'listopad', 'grudzień'];\r\n        let days = ['niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota'];\r\n\r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return (`${day} ${date} ${month} ${year}`)\r\n    };\r\n\r\n    return (\r\n        <div className={typeof weather.main != \"undefined\" ? \"app\" : \"app warm\"}\r\n             style={typeof imageCountry.links != \"undefined\" ? {backgroundImage: `url(${imageCountry.urls.regular})`}\r\n                 : null}>\r\n            <main>\r\n                <div className=\"search-box\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className={\"search-bar\"}\r\n                        placeholder={\"Search city\"}\r\n                        onChange={e => setQuery(e.target.value)}\r\n                        value={query}\r\n                        onKeyPress={search}\r\n                    />\r\n                </div>\r\n                {(typeof weather.main != \"undefined\") ?\r\n                    <>\r\n                        <div className=\"location-box\">\r\n                            <div className=\"location\">\r\n                                {weather.name}, {weather.sys.country}\r\n                            </div>\r\n                            <div className=\"date\">\r\n                                {dateBuilder(new Date())}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"weather-box\">\r\n                            <div className=\"temp\">\r\n                                {Math.round(weather.main.temp)}°C\r\n                            </div>\r\n\r\n                            <div className=\"weather\">\r\n                                {weather.weather[0].main}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    : null}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppWeather;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './AppWeather.css';\nimport AppWeather from \"./AppWeather\";\n\n\nReactDOM.render(\n    <AppWeather />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}